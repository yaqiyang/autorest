/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * XMsClientRequestId
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestAzureSpecialParametersTestClient.
 */
export interface XMsClientRequestId {

    /**
     * Get method that overwrites x-ms-client-request header with value
     * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    get(callback: ServiceCallback<void>): void;

    /**
     * Get method that overwrites x-ms-client-request header with value
     * 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     *
     * @param {string} xMsClientRequestId This should appear as a method
     * parameter, use value '9C4D50EE-2D56-4CD3-8152-34347DC9F2B0'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    paramGet(xMsClientRequestId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    paramGet(xMsClientRequestId: string, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * SubscriptionInCredentials
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestAzureSpecialParametersTestClient.
 */
export interface SubscriptionInCredentials {

    /**
     * POST method with subscriptionId modeled in credentials.  Set the credential
     * subscriptionId to '1234-5678-9012-3456' to succeed
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postMethodGlobalValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postMethodGlobalValid(callback: ServiceCallback<void>): void;

    /**
     * POST method with subscriptionId modeled in credentials.  Set the credential
     * subscriptionId to null, and client-side validation should prevent you from
     * making this call
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postMethodGlobalNull(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postMethodGlobalNull(callback: ServiceCallback<void>): void;

    /**
     * POST method with subscriptionId modeled in credentials.  Set the credential
     * subscriptionId to '1234-5678-9012-3456' to succeed
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postMethodGlobalNotProvidedValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postMethodGlobalNotProvidedValid(callback: ServiceCallback<void>): void;

    /**
     * POST method with subscriptionId modeled in credentials.  Set the credential
     * subscriptionId to '1234-5678-9012-3456' to succeed
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postPathGlobalValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postPathGlobalValid(callback: ServiceCallback<void>): void;

    /**
     * POST method with subscriptionId modeled in credentials.  Set the credential
     * subscriptionId to '1234-5678-9012-3456' to succeed
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postSwaggerGlobalValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postSwaggerGlobalValid(callback: ServiceCallback<void>): void;
}

/**
 * @class
 * SubscriptionInMethod
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestAzureSpecialParametersTestClient.
 */
export interface SubscriptionInMethod {

    /**
     * POST method with subscriptionId modeled in the method.  pass in
     * subscription id = '1234-5678-9012-3456' to succeed
     *
     * @param {string} subscriptionId This should appear as a method parameter,
     * use value '1234-5678-9012-3456'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postMethodLocalValid(subscriptionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postMethodLocalValid(subscriptionId: string, callback: ServiceCallback<void>): void;

    /**
     * POST method with subscriptionId modeled in the method.  pass in
     * subscription id = null, client-side validation should prevent you from
     * making this call
     *
     * @param {string} subscriptionId This should appear as a method parameter,
     * use value null, client-side validation should prvenet the call
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postMethodLocalNull(subscriptionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postMethodLocalNull(subscriptionId: string, callback: ServiceCallback<void>): void;

    /**
     * POST method with subscriptionId modeled in the method.  pass in
     * subscription id = '1234-5678-9012-3456' to succeed
     *
     * @param {string} subscriptionId Should appear as a method parameter -use
     * value '1234-5678-9012-3456'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postPathLocalValid(subscriptionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postPathLocalValid(subscriptionId: string, callback: ServiceCallback<void>): void;

    /**
     * POST method with subscriptionId modeled in the method.  pass in
     * subscription id = '1234-5678-9012-3456' to succeed
     *
     * @param {string} subscriptionId The subscriptionId, which appears in the
     * path, the value is always '1234-5678-9012-3456'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postSwaggerLocalValid(subscriptionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postSwaggerLocalValid(subscriptionId: string, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * ApiVersionDefault
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestAzureSpecialParametersTestClient.
 */
export interface ApiVersionDefault {

    /**
     * GET method with api-version modeled in global settings.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMethodGlobalValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getMethodGlobalValid(callback: ServiceCallback<void>): void;

    /**
     * GET method with api-version modeled in global settings.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMethodGlobalNotProvidedValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getMethodGlobalNotProvidedValid(callback: ServiceCallback<void>): void;

    /**
     * GET method with api-version modeled in global settings.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getPathGlobalValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getPathGlobalValid(callback: ServiceCallback<void>): void;

    /**
     * GET method with api-version modeled in global settings.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getSwaggerGlobalValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getSwaggerGlobalValid(callback: ServiceCallback<void>): void;
}

/**
 * @class
 * ApiVersionLocal
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestAzureSpecialParametersTestClient.
 */
export interface ApiVersionLocal {

    /**
     * Get method with api-version modeled in the method.  pass in api-version =
     * '2.0' to succeed
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMethodLocalValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getMethodLocalValid(callback: ServiceCallback<void>): void;

    /**
     * Get method with api-version modeled in the method.  pass in api-version =
     * null to succeed
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.apiVersion] This should appear as a method
     * parameter, use value null, this should result in no serialized parameter
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMethodLocalNull(options: { apiVersion? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getMethodLocalNull(callback: ServiceCallback<void>): void;

    /**
     * Get method with api-version modeled in the method.  pass in api-version =
     * '2.0' to succeed
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getPathLocalValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getPathLocalValid(callback: ServiceCallback<void>): void;

    /**
     * Get method with api-version modeled in the method.  pass in api-version =
     * '2.0' to succeed
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getSwaggerLocalValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getSwaggerLocalValid(callback: ServiceCallback<void>): void;
}

/**
 * @class
 * SkipUrlEncoding
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestAzureSpecialParametersTestClient.
 */
export interface SkipUrlEncoding {

    /**
     * Get method with unencoded path parameter with value 'path1/path2/path3'
     *
     * @param {string} unencodedPathParam Unencoded path parameter with value
     * 'path1/path2/path3'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMethodPathValid(unencodedPathParam: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getMethodPathValid(unencodedPathParam: string, callback: ServiceCallback<void>): void;

    /**
     * Get method with unencoded path parameter with value 'path1/path2/path3'
     *
     * @param {string} unencodedPathParam Unencoded path parameter with value
     * 'path1/path2/path3'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getPathPathValid(unencodedPathParam: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getPathPathValid(unencodedPathParam: string, callback: ServiceCallback<void>): void;

    /**
     * Get method with unencoded path parameter with value 'path1/path2/path3'
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getSwaggerPathValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getSwaggerPathValid(callback: ServiceCallback<void>): void;

    /**
     * Get method with unencoded query parameter with value
     * 'value1&q2=value2&q3=value3'
     *
     * @param {string} q1 Unencoded query parameter with value
     * 'value1&q2=value2&q3=value3'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMethodQueryValid(q1: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getMethodQueryValid(q1: string, callback: ServiceCallback<void>): void;

    /**
     * Get method with unencoded query parameter with value null
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.q1] Unencoded query parameter with value null
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMethodQueryNull(options: { q1? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getMethodQueryNull(callback: ServiceCallback<void>): void;

    /**
     * Get method with unencoded query parameter with value
     * 'value1&q2=value2&q3=value3'
     *
     * @param {string} q1 Unencoded query parameter with value
     * 'value1&q2=value2&q3=value3'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getPathQueryValid(q1: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getPathQueryValid(q1: string, callback: ServiceCallback<void>): void;

    /**
     * Get method with unencoded query parameter with value
     * 'value1&q2=value2&q3=value3'
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getSwaggerQueryValid(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getSwaggerQueryValid(callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Odata
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestAzureSpecialParametersTestClient.
 */
export interface Odata {

    /**
     * Specify filter parameter with value '$filter=id gt 5 and name eq
     * 'foo'&$orderby=id&$top=10'
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] The filter parameter with value
     * '$filter=id gt 5 and name eq 'foo''.
     * 
     * @param {number} [options.top] The top parameter with value 10.
     * 
     * @param {string} [options.orderby] The orderby parameter with value id.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getWithFilter(options: { filter? : string, top? : number, orderby? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    getWithFilter(callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Header
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestAzureSpecialParametersTestClient.
 */
export interface Header {

    /**
     * Send foo-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 in the
     * header of the request
     *
     * @param {string} fooClientRequestId The fooRequestId
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    customNamedRequestId(fooClientRequestId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    customNamedRequestId(fooClientRequestId: string, callback: ServiceCallback<void>): void;

    /**
     * Send foo-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 in the
     * header of the request, via a parameter group
     *
     * @param {object} headerCustomNamedRequestIdParamGroupingParameters
     * Additional parameters for the operation
     * 
     * @param {string}
     * headerCustomNamedRequestIdParamGroupingParameters.fooClientRequestId The
     * fooRequestId
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    customNamedRequestIdParamGrouping(headerCustomNamedRequestIdParamGroupingParameters: models.HeaderCustomNamedRequestIdParamGroupingParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    customNamedRequestIdParamGrouping(headerCustomNamedRequestIdParamGroupingParameters: models.HeaderCustomNamedRequestIdParamGroupingParameters, callback: ServiceCallback<void>): void;
}
