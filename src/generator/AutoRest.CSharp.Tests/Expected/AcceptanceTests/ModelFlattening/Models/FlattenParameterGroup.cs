// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Fixtures.AcceptanceTestsModelFlattening.Models
{
    using System.Linq;

    /// <summary>
    /// Additional parameters for the putSimpleProductWithGrouping operation.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class FlattenParameterGroup
    {
        /// <summary>
        /// Initializes a new instance of the FlattenParameterGroup class.
        /// </summary>
        public FlattenParameterGroup() { }

        /// <summary>
        /// Initializes a new instance of the FlattenParameterGroup class.
        /// </summary>
        /// <param name="name">Product name with value 'groupproduct'</param>
        /// <param name="productId">Unique identifier representing a specific
        /// product for a given latitude & longitude. For example, uberX in
        /// San Francisco will have a different product_id than uberX in Los
        /// Angeles.</param>
        /// <param name="maxProductDisplayName">Display name of
        /// product.</param>
        /// <param name="description">Description of product.</param>
        /// <param name="genericValue">Generic URL value.</param>
        /// <param name="odatavalue">URL value.</param>
        public FlattenParameterGroup(string name, string productId, string maxProductDisplayName, string description = default(string), string genericValue = default(string), string odatavalue = default(string))
        {
            Name = name;
            ProductId = productId;
            Description = description;
            MaxProductDisplayName = maxProductDisplayName;
            GenericValue = genericValue;
            Odatavalue = odatavalue;
        }

        /// <summary>
        /// Gets or sets product name with value 'groupproduct'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets unique identifier representing a specific product for
        /// a given latitude &amp; longitude. For example, uberX in San
        /// Francisco will have a different product_id than uberX in Los
        /// Angeles.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "")]
        public string ProductId { get; set; }

        /// <summary>
        /// Gets or sets description of product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets display name of product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "")]
        public string MaxProductDisplayName { get; set; }

        /// <summary>
        /// Gets or sets generic URL value.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "")]
        public string GenericValue { get; set; }

        /// <summary>
        /// Gets or sets URL value.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "")]
        public string Odatavalue { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (ProductId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ProductId");
            }
            if (MaxProductDisplayName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "MaxProductDisplayName");
            }
        }
    }
}
