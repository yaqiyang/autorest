/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Implicit
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestRequiredOptionalTestService.
 */
export interface Implicit {

    /**
     * Test implicitly required path parameter
     *
     * @param {string} pathParameter
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getRequiredPath(pathParameter: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    getRequiredPath(pathParameter: string, callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test implicitly optional query parameter
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.queryParameter]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putOptionalQuery(options: { queryParameter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    putOptionalQuery(callback: ServiceCallback<void>): void;

    /**
     * Test implicitly optional header parameter
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.queryParameter]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putOptionalHeader(options: { queryParameter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    putOptionalHeader(callback: ServiceCallback<void>): void;

    /**
     * Test implicitly optional body parameter
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.bodyParameter]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putOptionalBody(options: { bodyParameter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    putOptionalBody(callback: ServiceCallback<void>): void;

    /**
     * Test implicitly required path parameter
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getRequiredGlobalPath(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    getRequiredGlobalPath(callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test implicitly required query parameter
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getRequiredGlobalQuery(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    getRequiredGlobalQuery(callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test implicitly optional query parameter
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getOptionalGlobalQuery(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    getOptionalGlobalQuery(callback: ServiceCallback<models.ErrorModel>): void;
}

/**
 * @class
 * Explicit
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestRequiredOptionalTestService.
 */
export interface Explicit {

    /**
     * Test explicitly required integer. Please put null and the client library
     * should throw before the request is sent.
     *
     * @param {number} bodyParameter
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredIntegerParameter(bodyParameter: number, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredIntegerParameter(bodyParameter: number, callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional integer. Please put null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {number} [options.bodyParameter]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalIntegerParameter(options: { bodyParameter? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalIntegerParameter(callback: ServiceCallback<void>): void;

    /**
     * Test explicitly required integer. Please put a valid int-wrapper with
     * 'value' = null and the client library should throw before the request is
     * sent.
     *
     * @param {number} value
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredIntegerProperty(value: number, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredIntegerProperty(value: number, callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional integer. Please put a valid int-wrapper with
     * 'value' = null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {number} [options.value]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalIntegerProperty(options: { value? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalIntegerProperty(callback: ServiceCallback<void>): void;

    /**
     * Test explicitly required integer. Please put a header 'headerParameter' =>
     * null and the client library should throw before the request is sent.
     *
     * @param {number} headerParameter
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredIntegerHeader(headerParameter: number, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredIntegerHeader(headerParameter: number, callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional integer. Please put a header 'headerParameter' =>
     * null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {number} [options.headerParameter]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalIntegerHeader(options: { headerParameter? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalIntegerHeader(callback: ServiceCallback<void>): void;

    /**
     * Test explicitly required string. Please put null and the client library
     * should throw before the request is sent.
     *
     * @param {string} bodyParameter
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredStringParameter(bodyParameter: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredStringParameter(bodyParameter: string, callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional string. Please put null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.bodyParameter]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalStringParameter(options: { bodyParameter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalStringParameter(callback: ServiceCallback<void>): void;

    /**
     * Test explicitly required string. Please put a valid string-wrapper with
     * 'value' = null and the client library should throw before the request is
     * sent.
     *
     * @param {string} value
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredStringProperty(value: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredStringProperty(value: string, callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional integer. Please put a valid string-wrapper with
     * 'value' = null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.value]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalStringProperty(options: { value? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalStringProperty(callback: ServiceCallback<void>): void;

    /**
     * Test explicitly required string. Please put a header 'headerParameter' =>
     * null and the client library should throw before the request is sent.
     *
     * @param {string} headerParameter
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredStringHeader(headerParameter: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredStringHeader(headerParameter: string, callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional string. Please put a header 'headerParameter' =>
     * null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.bodyParameter]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalStringHeader(options: { bodyParameter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalStringHeader(callback: ServiceCallback<void>): void;

    /**
     * Test explicitly required complex object. Please put null and the client
     * library should throw before the request is sent.
     *
     * @param {object} bodyParameter
     * 
     * @param {number} bodyParameter.id
     * 
     * @param {string} [bodyParameter.name]
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredClassParameter(bodyParameter: models.Product, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredClassParameter(bodyParameter: models.Product, callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional complex object. Please put null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.bodyParameter]
     * 
     * @param {number} options.bodyParameter.id
     * 
     * @param {string} [options.bodyParameter.name]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalClassParameter(options: { bodyParameter? : models.Product, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalClassParameter(callback: ServiceCallback<void>): void;

    /**
     * Test explicitly required complex object. Please put a valid class-wrapper
     * with 'value' = null and the client library should throw before the request
     * is sent.
     *
     * @param {object} value
     * 
     * @param {number} value.id
     * 
     * @param {string} [value.name]
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredClassProperty(value: models.Product, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredClassProperty(value: models.Product, callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional complex object. Please put a valid class-wrapper
     * with 'value' = null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.value]
     * 
     * @param {number} options.value.id
     * 
     * @param {string} [options.value.name]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalClassProperty(options: { value? : models.Product, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalClassProperty(callback: ServiceCallback<void>): void;

    /**
     * Test explicitly required array. Please put null and the client library
     * should throw before the request is sent.
     *
     * @param {array} bodyParameter
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredArrayParameter(bodyParameter: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredArrayParameter(bodyParameter: string[], callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional array. Please put null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {array} [options.bodyParameter]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalArrayParameter(options: { bodyParameter? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalArrayParameter(callback: ServiceCallback<void>): void;

    /**
     * Test explicitly required array. Please put a valid array-wrapper with
     * 'value' = null and the client library should throw before the request is
     * sent.
     *
     * @param {array} value
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredArrayProperty(value: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredArrayProperty(value: string[], callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional array. Please put a valid array-wrapper with
     * 'value' = null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {array} [options.value]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalArrayProperty(options: { value? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalArrayProperty(callback: ServiceCallback<void>): void;

    /**
     * Test explicitly required array. Please put a header 'headerParameter' =>
     * null and the client library should throw before the request is sent.
     *
     * @param {array} headerParameter
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postRequiredArrayHeader(headerParameter: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ErrorModel>): void;
    postRequiredArrayHeader(headerParameter: string[], callback: ServiceCallback<models.ErrorModel>): void;

    /**
     * Test explicitly optional integer. Please put a header 'headerParameter' =>
     * null.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {array} [options.headerParameter]
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    postOptionalArrayHeader(options: { headerParameter? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    postOptionalArrayHeader(callback: ServiceCallback<void>): void;
}
